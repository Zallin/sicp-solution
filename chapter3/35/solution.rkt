#lang racket

(define (squarer a b)
  (define (process-new-value)
    (if (has-value? b)
      (if (< (get-value? b) 0)
        (error "square > 0 -- SQUARER")
        (set-value! a (sqrt (get-value b)) me))
      (if (has-value? a)
        (set-value! b (expt (get-value a) 2) me)
        'no-val)))
  (define (process-forget-value)
    (forget-value! a me)
    (forget-value! b me)
    (process-new-value))
  (define (me request)
    (cond ((eq? request 'I-have-a-value)
           (process-new-value))
          ((eq? request 'I-lost-my-value)
           (process-forget-value))
          (else (error "unknown request -- SQUARER"))))
  (connect a me)
  (connect b me)
  me)
